import { ArrowLeftOutlined, RightOutlined } from '@ant-design/icons'
import React, { useEffect, useState } from 'react'
import { connect } from 'react-redux'
import { useRouter } from 'next/router'
import Link from 'next/link'
import { Input, Spin } from 'antd'
import Profile from '../../../components/Profile'
import { getOrdersInfo } from '../../../services/apiServices'
import Head from 'next/head';
import NoOrders from '../../../components/svgComponents/NoOrders'
import PageWrapper from '../../../components/PageWrapper/PageWrapper'
import { useRef } from "react"
import Stepper from '../../../components/stepper'

export const Index = ({ customerDetails, storeDetails, storeSettings }) => {




    const handleChange = () => {

    }


    return (
        <div className=' lg:mt-24 md:-mt-4 bg-[#F6F6F6] flex lg:pl-32 md:pl-32 lg:p-8 md:p-8'>
            {/* <Head>
                <title>{storeDetails ? storeDetails?.store_name : 'Apparel Store'}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href={storeDetails ? storeDetails?.logo_img_url : 'favicon.ico'} />
            </Head> */}
            <Profile />
            <div className='flex flex-col w-full mt-20 lg:mt-0 lg:mr-24 md:mr-24'>
                <div className='bg-white pl-4 p-3 lg:pl-8 lg md:pl-8 md:p-3 flex lg:flex-col text-left lg:ml-5 md:ml-5 w-full rounded'>
                    <div className='lg:hidden block'>
                        <Link href='/account/user'>
                            <ArrowLeftOutlined className='text-black text-lg mr-4 mt-4' />
                        </Link>
                    </div>
                    <p className='text-black font-montBold text-xl mt-4 '>My Profile</p>

                    <div className='flex flex-col mt-4'>
                        <p className='text-slate-500 text-sm font-montMedium'>Name</p>
                        <div style={{ border: '1px solid grey', padding: '5px', borderRadius: '3px', marginTop: '-5px' }} className='lg:w-[40vw] w-80 '>
                            {/* <input type="text" placeholder="Enter Password" className="login-input outline-none"  /> */}
                            <Input placeholder="Enter Your Name" name="name" defaultValue={customerDetails?.data?.full_name ? customerDetails?.data.full_name : 'User'} onChange={handleChange} required autoComplete="off" bordered={false} />
                        </div>
                    </div>

                    <div className='flex flex-col mt-8 '>
                        <p className='text-slate-500 text-sm font-montMedium'>Phone Number</p>
                        <div style={{ border: '1px solid grey', padding: '5px', borderRadius: '3px', marginTop: '-5px' }} className='lg:w-[40vw] w-80 '>
                            {/* <input type="text" placeholder="Enter Password" className="login-input outline-none"  /> */}
                            <Input placeholder="Enter Your Name" name="Phone Number" defaultValue={customerDetails?.data?.phone} onChange={handleChange} required autoComplete="off" bordered={false} />
                        </div>
                    </div>

                    <div className='flex flex-col mt-8 mb-8'>
                        <p className='text-slate-500 text-sm font-montMedium'>Mail ID</p>
                        <div style={{ border: '1px solid grey', padding: '5px', borderRadius: '3px', marginTop: '-5px' }} className='lg:w-[40vw] w-80 '>
                            {/* <input type="text" placeholder="Enter Password" className="login-input outline-none"  /> */}
                            <Input placeholder="Email" name="Email" defaultValue={customerDetails?.data?.email_id} onChange={handleChange} required autoComplete="off" bordered={false} />
                        </div>
                    </div>

                    {/* <p className='btn-bg text-white text-base mr-10 px-5 py-2 rounded cursor-pointer inline  w-24' style={{ backgroundColor: storeSettings? storeSettings.secondary_color : 'black' }}>Update</p> */}


                </div>

            </div>

        </div>
    )
}

const mapStateToProps = (state) => {
    return {
        customerDetails: state.customerDetailsReducer,
        storeDetails: state.storeDetailsReducer?.data,
        storeSettings: state.storeSettingsReducer?.data
    }
}

const mapDispatchToProps = {}

export default connect(mapStateToProps, mapDispatchToProps)(PageWrapper(Index))